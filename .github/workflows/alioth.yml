name: Manual Build Twilight v2 For Redmi K40(alioth)

on:
  workflow_dispatch


jobs:
  TwilightForAlioth:
    runs-on: ubuntu-latest
    steps:
      - name: Installing Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y zip flex bison libncurses-dev gawk glibc-source libiberty-dev autoconf kmod bc build-essential gcc libc6 curl libstdc++6 git wget libssl-dev cpio p7zip-full
          sudo apt clean
          echo "BUILD_TIME=$(TZ=Asia/Shanghai date +%F)" >> $GITHUB_ENV
      - name: Cloning Sources and Toolchain
        run: |
          git clone https://github.com/SakuraSource/android_kernel_qcom_sdm710.git -b twrp-sdm710 --depth=1 --recurse-submodules android_kernel_xiaomi_sm8250
          git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 -b lineage-19.1 --depth=1 --single-branch --no-tags ~/aarch64-linux-android-4.9
          git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 -b lineage-19.1 --depth=1 --single-branch --no-tags ~/arm-linux-androideabi-4.9
          git clone https://github.com/Tkiliay/AnyKernel3.git -b grus
          git clone https://gitlab.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-r445002 --depth=1 --single-branch --no-tags -b 12.0 ~/clang
      - name: Compiling Kernel
        run: |
          CLANG=~/clang/bin
          GCC32=~/arm-linux-androideabi-4.9/bin
          GCC64=~/aarch64-linux-android-4.9/bin
          PATH=$CLANG:$GCC64:$GCC32:$PATH
          export PATH
          export ARCH=arm64
          export CLANG_TRIPLE=aarch64-linux-gnu
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          output_dir=out
          pushd android_kernel_xiaomi_sm8250
          make O="$output_dir" \
                      vendor/sdm670-perf_defconfig \
                      xiaomi/sdm710-common.config \
                      xiaomi/grus.config

          make -j $(nproc) \
                       O="$output_dir" \
                       CC=clang
          popd
      - name: Packaging the Kernel
        run: |
          cp -v android_kernel_xiaomi_sm8250/out/arch/arm64/boot/Image \
                     AnyKernel3/
          cp -r android_kernel_xiaomi_sm8250/out/arch/arm64/boot/dts \
                     AnyKernel3/
          pushd AnyKernel3
          7z a -mx9 ../Twilight-V2-CI-${{ env.BUILD_TIME }}-grus_4.19-AOSP.zip *
          popd
      - name: Creating Config Info
        run: |
          echo "Device: Xiaomi MI 9 SE
          Code: grus
          Build Code: ${{ github.run_number }}
          Xiaomi MI 9 SE 4.19 kernel" >> INFO.txt
      - name: Uploading Kernel Package to GH-Release
        uses: ncipollo/release-action@v1.8.6
        with:
          artifacts: Twilight-V2-CI-${{ env.BUILD_TIME }}-grus_4.19-AOSP.zip
          name: "Twilight-V2-alioth_CI-${{ env.BUILD_TIME }}"
          tag: " ${{ env.BUILD_TIME }}_Alioth_kernelsu-CI_${{ github.run_number }}"
          bodyFile: "INFO.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
